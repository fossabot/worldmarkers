# Generated by Django 3.0.4 on 2020-04-02 13:36

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    dependencies = [
        ('world', '0003_auto_20200402_1159'),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='country',
            options={'verbose_name': 'Страна', 'verbose_name_plural': 'Страны'},
        ),
        migrations.AlterField(
            model_name='country',
            name='center',
            field=django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326, verbose_name='Центр'),
        ),
        migrations.AlterField(
            model_name='country',
            name='iso2',
            field=models.CharField(max_length=2, verbose_name='2 Цифровой код ISO'),
        ),
        migrations.AlterField(
            model_name='country',
            name='iso3',
            field=models.CharField(max_length=3, verbose_name='3 Цифровой код  ISO'),
        ),
        migrations.AlterField(
            model_name='country',
            name='mpoly',
            field=django.contrib.gis.db.models.fields.MultiPolygonField(srid=4326, verbose_name='Полигон всей страны'),
        ),
        migrations.AlterField(
            model_name='country',
            name='region',
            field=models.IntegerField(verbose_name='Код региона'),
        ),
        migrations.AlterField(
            model_name='country',
            name='subregion',
            field=models.IntegerField(verbose_name='Суб региона код '),
        ),
        migrations.AlterField(
            model_name='country',
            name='un',
            field=models.IntegerField(verbose_name='Код ООН'),
        ),
        migrations.CreateModel(
            name='Town',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('geonameid', models.IntegerField(default=0, help_text='integer id of record in geonames database', verbose_name='Geonameid')),
                ('name', models.CharField(default='', help_text='name of geographical point', max_length=200, verbose_name='Name')),
                ('asciiname', models.CharField(default='', help_text='name of geographical point in plain ascii characters', max_length=200, verbose_name='Ascii name')),
                ('alternatenames', models.CharField(default='', help_text='alternatenames, comma separated, ascii names automatically transliterated, convenience attribute from alternatename table', max_length=10000, verbose_name='Alternate names')),
                ('center', django.contrib.gis.db.models.fields.PointField(geography=True, srid=4326, verbose_name='Центр')),
                ('is_capital', models.BooleanField(default=False, verbose_name='Capital of country')),
                ('feature_class', models.CharField(default='', help_text='see http://www.geonames.org/export/codes.html', max_length=1, verbose_name='Feature class')),
                ('feature_code', models.CharField(default='', help_text='see http://www.geonames.org/export/codes.html', max_length=10, verbose_name='Feature code')),
                ('country_code', models.CharField(default='', help_text='ISO-3166 2-letter country code', max_length=2, verbose_name='Country code')),
                ('cc2', models.CharField(default='', help_text='Alternate country codes, comma separated, ISO-3166 2-letter country code', max_length=200, verbose_name='Alternate country codes')),
                ('admin1_code', models.CharField(default='', help_text='fipscode (subject to change to iso code), see exceptions below, see file admin1Codes.txt for display names of this code', max_length=20, verbose_name='Fips code')),
                ('admin2_code', models.CharField(default='', help_text='code for the second administrative division, a county in the US, see file admin2Codes.txt', max_length=80, verbose_name='Code for the second administrative division')),
                ('admin3_code', models.CharField(default='', help_text='code for third level administrative division', max_length=20, verbose_name='admin3 code')),
                ('admin4_code', models.CharField(default='', help_text='code for fourth level administrative division', max_length=20, verbose_name='admin4 code')),
                ('population', models.IntegerField(default=0, verbose_name='Population')),
                ('elevation', models.IntegerField(default=0, help_text='elevation in meters', verbose_name='Elevation')),
                ('dem', models.IntegerField(default=0, help_text='digital elevation model, srtm3 or gtopo30, average elevation of 3x3 (ca 90mx90m) or 30x30 (ca 900mx900m) area in meters, integer. srtm processed by cgiar/ciat.', verbose_name='Digital Elevation model')),
                ('timezone', models.CharField(default='', help_text='the iana timezone id(see file timeZone.txt)', max_length=40, verbose_name='Timezone')),
                ('modification_date', models.DateField(default=django.utils.timezone.now, help_text='date of last modification in yyyy-MM-dd format', verbose_name='Modification date')),
                ('country', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='world.Country', verbose_name='Country')),
            ],
            options={
                'verbose_name': 'Город',
                'verbose_name_plural': 'Города',
            },
        ),
    ]
